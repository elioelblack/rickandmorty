{"version":3,"sources":["Component/TopBar.jsx","Component/Service/Service.js","Component/Items.jsx","Component/Index.jsx","App.js","serviceWorker.js","index.js"],"names":["TopBar","data","useState","name","className","style","backgroundColor","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","id","noValidate","onSubmit","e","onClickSearch","target","placeholder","onChange","value","required","onClick","API_URL","returnFavorite","favorites","sessionStorage","getItem","JSON","parse","Items","props","state","items","obj","temp","length","push","setItem","stringify","addFavorite","this","map","cn","padding","maxWidth","src","image","alt","width","species","episode","color","status","class","onClickIcon","bind","gender","fillCardItem","Component","Index","onClickNext","page","next","prev","setState","returnItemPerPage","onClickPrev","pages","results","document","getElementById","addEventListener","event","preventDefault","htmlBodyFavorites","fetch","searchItems","then","response","json","undefined","info","fetchPageItems","alert","form","checkValidity","validated","isLoading","classList","add","onSearch","borderBottom","marginTop","onClickFirst","tabindex","aria-disabled","aria-current","onClickLast","data-backdrop","role","aria-labelledby","aria-hidden","data-dismiss","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"0PAEO,SAASA,EAAOC,GAAK,MAEAC,mBAASD,EAAKE,MAFd,6BAIxB,OACI,yBAAKC,UAAU,2DAA2DC,MAAO,CAACC,gBAAiB,YAC/F,4BAAQF,UAAU,iBAAiBG,KAAK,SAASC,cAAY,WAAWC,cAAY,uBAAuBC,gBAAc,sBAAsBC,gBAAc,QAAQC,aAAW,qBAChL,0BAAMR,UAAU,yBAEhB,uBAAGA,UAAU,eAAeS,KAAK,KAAjC,kBAEA,yBAAKT,UAAU,2BAA2BU,GAAG,uBAC7C,wBAAIV,UAAU,mCACV,wBAAIA,UAAU,mBACd,uBAAGA,UAAU,WAAWS,KAAK,KAA7B,kBAAgD,0BAAMT,UAAU,WAAhB,gBAGpD,0BAAMA,UAAU,4CAA4CW,YAAU,EAACD,GAAG,cAAcE,SAAU,SAACC,GAAD,OAAKhB,EAAKiB,cAAcD,EAAEE,UACxH,2BAAOf,UAAU,uBACjBG,KAAK,SACLa,YAAY,SACZR,aAAW,SACXS,SAAU,SAACJ,GAAD,OAAKhB,EAAKoB,SAASJ,EAAEE,OAAOG,QACtCC,UAAQ,IACR,4BAAQT,GAAG,aAAaV,UAAU,uCAAuCG,KAAK,SAAUiB,QAAS,SAACP,GAAD,OAAKhB,EAAKiB,cAAcD,EAAEE,UAA3H,aC1BhB,IAAMM,EAAU,kCAaHC,EAAiB,WAC1B,IAAIC,EAAYC,eAAeC,QAAQ,aACvC,OAAkB,OAAdF,EAA2B,GACxBG,KAAKC,MAAMJ,ICbDK,E,kDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAM,CACPC,MAAMF,EAAME,OAHF,E,qGAUNlB,GACR,IAAImB,EAAMnB,EAAEE,OAAOL,GACfuB,EAAOX,IACKA,IAEbW,EAAKC,OAAO,GAEXD,EAAKE,KAAKT,KAAKC,MAAMK,IDZN,SAACA,GACxBR,eAAeY,QAAQ,YAAYV,KAAKW,UAAUL,ICc9CM,CAAYL,K,mCAIHpB,GAAG,IAAD,OACX,OAAO0B,KAAKV,MAAME,MAAMS,KACpB,SAAAC,GACI,OACI,yBAAKzC,UAAU,oCAAoCC,MAAO,CAACyC,QAAQ,KAC/D,yBAAK1C,UAAU,OAAOC,MAAO,CAAC0C,SAAS,IAAKD,QAAQ,IACpD,yBAAK1C,UAAU,kBACX,yBAAKA,UAAU,YACf,yBAAK4C,IAAKH,EAAGI,MAAO7C,UAAU,WAAW8C,IAAI,MAAM7C,MAAO,CAAC8C,MAAM,WAEjE,yBAAK/C,UAAU,YACf,yBAAKA,UAAU,aACX,wBAAIA,UAAU,4BAA4ByC,EAAG1C,MAC7C,uBAAGC,UAAU,aAAb,WACY,2BAAIyC,EAAGO,SAAY,6BAD/B,aAEc,2BAAIP,EAAGQ,QAAQf,QAAW,6BAFxC,WAGY,0BAAMjC,MAAO,CAACiD,MAAkB,UAAZT,EAAGU,OAAiB,QAAQ,QAAQ,2BAAIV,EAAGU,UAE3E,uBAAGnD,UAAU,aACT,uBAAGoD,MAAM,cACT1C,GAAIgB,KAAKW,UAAUI,GACnBrB,QAAS,EAAKiC,YAAYC,KAAK,MAInC,uBAAGtD,UAAU,aACb,2BAAOA,UAAU,cAAcyC,EAAGc,mB,+BAa1D,OACI,yBAAKvD,UAAU,OACVuC,KAAKiB,oB,GAlEaC,aCGdC,E,kDACjB,WAAY7B,GAAO,IAAD,8BACd,cAAMA,IA4EV8B,YAAY,SAAC9C,GAAK,IACT+C,EAAQ,EAAK9B,MAAb8B,KADQ,EAEU,EAAK9B,MAApB+B,EAFK,EAELA,KAAMC,EAFD,EAECA,KACd,EAAKC,SAAS,CACVH,KAAKA,EAAK,EACVC,KAAKA,EAAK,EACVC,KAAKA,EAAK,IAEXD,GAAM,IACL,EAAKE,SAAS,CAACF,KAAK,KAExB,EAAKG,kBAAkBH,EAAK,IAxFd,EA0FlBI,YAAc,SAACpD,GAAK,IACX+C,EAAQ,EAAK9B,MAAb8B,KADU,EAEQ,EAAK9B,MAApB+B,EAFO,EAEPA,KAAMC,EAFC,EAEDA,KACd,EAAKC,SAAS,CACVH,KAAKA,EAAK,EACVC,KAAKA,EAAK,EACVC,KAAKA,EAAK,IAEXA,GAAM,GACL,EAAKC,SAAS,CAACD,KAAK,OAExB,EAAKE,kBAAkB,EAAKlC,MAAMgC,OAnGlC,EAAKhC,MAAM,CACP8B,KAAK,EACLM,MAAM,EACNL,KAAK,EACLC,KAAK,KACLK,QAAQ,GACRpE,KAAK,GACLwB,UAAU,IAEd,EAAKyC,kBAAoB,EAAKA,kBAAkBV,KAAvB,gBACzB,EAAKrC,SAAW,EAAKA,SAASqC,KAAd,gBAChB,EAAKxC,cAAgB,EAAKA,cAAcwC,KAAnB,gBAbP,E,gEAgBdf,KAAKyB,kBAAkBzB,KAAKT,MAAM+B,MAClCO,SAASC,eAAe,cAAcC,iBAAiB,SAAS,SAASC,GACrEA,EAAMC,oBAEV,IAAIjD,EAAYD,IAEhB,GAAGC,EAAUW,OAAO,EAAE,CAClB,IAAIuC,EACJ,yBAAKzE,UAAU,OACX,yBAAKA,UAAU,OACf,wBAAIA,UAAU,cAEVuB,EAAUiB,KACN,SAAAC,GACI,OACA,wBAAIzC,UAAU,mBAAmByC,EAAG1C,YAQpDwC,KAAKwB,SAAS,CACVxC,UAAUkD,O,+BAKb1E,GAAM,IAAD,QF/CQ,SAACA,GACvB,OAAO2E,MAAM,GAAD,OAAIrD,EAAJ,4BAA+BtB,KE+CvC4E,CAAY5E,GACX6E,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA/E,GAEF,QAAekF,IAAZlF,EAAKmF,KAAiB,CAAC,IACjBd,EAASrE,EAAKmF,KAAdd,MACL,EAAKH,SAAS,CACVI,QAAQtE,EAAKsE,QACbD,eAGJ,EAAKH,SAAS,CACVI,QAAQ,U,wCAONP,GAAM,IAAD,QFvEE,SAACA,GAC1B,OAAOc,MAAM,GAAD,OAAIrD,EAAJ,2BAA8BuC,KEuEtCqB,CAAerB,GACdgB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA/E,GAEF,EAAKkE,SAAS,CACVI,QAAQtE,EAAKsE,QACbD,MAAM,U,mCAgCLrD,GACT0B,KAAKyB,kBAAkB,GACvBzB,KAAKwB,SAAS,CACVF,KAAK,EACLC,KAAK,S,kCAIDjD,GACR0B,KAAKyB,kBAAkBzB,KAAKT,MAAMoC,OADxB,MAEK3B,KAAKT,MAFV,EAEN+B,KAFM,EAEDC,KACTvB,KAAKwB,SAAS,CACVF,KAAKtB,KAAKT,MAAMoC,MAAM,EACtBJ,KAAKvB,KAAKT,MAAMoC,MAAM,M,+BAIrBnE,GAELwC,KAAKwB,SAAS,CACVhE,KAAKA,M,oCAICc,GACVqE,MAAMrE,EAAEH,IACR,IAAMyE,EAAOtE,GACgB,IAAzBsE,EAAKC,iBACL7C,KAAKwB,SAAS,CACVsB,WAAW,EACXC,WAAU,IAEdH,EAAKI,UAAUC,IAAI,kBAEnBjD,KAAKkD,SAASlD,KAAKT,MAAM/B,Q,+BAIxB,IAAD,EACoCwC,KAAKT,MAAtC+B,EADH,EACGA,KAAKC,EADR,EACQA,KAAKK,EADb,EACaA,QAAQpE,EADrB,EACqBA,KAAMmE,EAD3B,EAC2BA,MAC/B,OACI,oCACI,kBAACtE,EAAD,CAAQqB,SAAUsB,KAAKtB,SAAUlB,KAAMA,EAAMe,cAAeyB,KAAKzB,gBACjE,wBAAIb,MAAO,CAACyF,aAAa,EAAEC,UAAU,KACnCpD,KAAKT,MAAMqC,QAAQjC,OAAO,GAC5B,yBAAK1B,aAAW,OACZ,wBAAIR,UAAU,qCACV,wBAAIA,UAAoB,OAAT8D,GAA0B,IAATA,EAAa,qBAAuB,aAChE,uBAAG9D,UAAU,YAAYoB,QAASmB,KAAKqD,aAAatC,KAAKf,MAAO9B,KAAK,IAAIoF,SAAS,KAAKC,gBAAc,QAArG,UAEJ,wBAAI9F,UAAoB,OAAT8D,GAA0B,IAATA,EAAa,qBAAuB,aAChE,uBAAG9D,UAAU,YAAYoB,QAASmB,KAAK0B,YAAYX,KAAKf,MAAO9B,KAAK,IAAIoF,SAAS,KAAKC,gBAAc,QAApG,aAEJ,wBAAI9F,UAAoB,OAAT8D,GAA0B,IAATA,EAAa,qBAAuB,aAChE,uBAAG9D,UAAU,YAAYoB,QAASmB,KAAK0B,YAAYX,KAAKf,MAAO9B,KAAK,KAAc,OAATqD,EAAgB,EAAIA,IACjG,wBAAI9D,UAAU,mBAAmB+F,eAAa,QAC1C,uBAAG/F,UAAU,YAAaS,KAAK,KAAKoD,EAAO,EAA3C,IAA8C,0BAAM7D,UAAU,WAAW6D,EAAO,KAEpF,wBAAI7D,UAAoB,OAAT6D,GAAiBA,GAAQK,EAAQ,qBAAuB,aACnE,uBAAGlE,UAAU,YAAYS,KAAK,IAAIV,KAAM8D,EAAMzC,QAASmB,KAAKoB,YAAYL,KAAKf,OAAQsB,IAEzF,wBAAI7D,UAAoB,OAAT6D,GAAiBA,GAAQK,EAAQ,qBAAuB,aACnE,uBAAGlE,UAAU,YAAYoB,QAASmB,KAAKoB,YAAYL,KAAKf,MAAO9B,KAAK,KAApE,SAEJ,wBAAIT,UAAoB,OAAT6D,GAAiBA,GAAQK,EAAQ,qBAAuB,aACnE,uBAAGlE,UAAU,YAAYoB,QAASmB,KAAKyD,YAAY1C,KAAKf,MAAO9B,KAAK,KAApE,WAIZ,wBAAIR,MAAO,CAACyF,aAAa,EAAEC,UAAU,KACjC,kBAAC,EAAD,CAAO5D,MAAOoC,IACd,4BAAQhE,KAAK,SAASH,UAAU,kBAAkBI,cAAY,QAAQC,cAAY,mBAAlF,gCAGA,yBAAKL,UAAU,aAAaU,GAAG,iBAAiBuF,gBAAc,SAASJ,SAAS,KAAKK,KAAK,SAASC,kBAAgB,sBAAsBC,cAAY,QACrJ,yBAAKpG,UAAU,eAAekG,KAAK,YAC/B,yBAAKlG,UAAU,iBACf,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,cAAcU,GAAG,uBAA/B,uBACA,4BAAQP,KAAK,SAASH,UAAU,QAAQqG,eAAa,QAAQ7F,aAAW,SACxE,0BAAM4F,cAAY,QAAlB,UAGJ,yBAAKpG,UAAU,cACVuC,KAAKT,MAAMP,WAEhB,yBAAKvB,UAAU,gBACX,4BAAQG,KAAK,SAASH,UAAU,oBAAoBqG,eAAa,SAAjE,kB,GAhMO5C,aCMpB6C,MATf,WACE,OACE,yBAAKtG,UAAU,gBACX,wBAAIC,MAAO,CAAE0F,UAAW,IAAxB,kBACF,kBAAC,EAAD,QCKcY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF1C,SAASC,eAAe,SDyHpB,kBAAmB0C,WACrBA,UAAUC,cAAcC,MACrBrC,MAAK,SAAAsC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.4580e051.chunk.js","sourcesContent":["import React,{ useState } from 'react'\n\nexport function TopBar(data){\n    //console.log(data)\n    const [name, setName] = useState(data.name);\n    \n    return(\n        <nav className=\"navbar navbar-expand-lg navbar-light navbar-dark bg-dark\" style={{backgroundColor: '#e3f2fd'}}>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <a className=\"navbar-brand\" href=\"#\">Rick And Morty</a>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\n            <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                <li className=\"nav-item active\">\n                <a className=\"nav-link\" href=\"#\">Show favorites <span className=\"sr-only\">(current)</span></a>\n                </li>                \n            </ul>\n            <form className=\"form-inline my-2 my-lg-0 needs-validation\" noValidate id=\"search-form\" onSubmit={(e)=>data.onClickSearch(e.target)}>\n                <input className=\"form-control mr-sm-2\" \n                type=\"search\"                 \n                placeholder=\"Search\" \n                aria-label=\"Search\"                \n                onChange={(e)=>data.onChange(e.target.value)}\n                required/>\n                <button id=\"btn-search\" className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\"  onClick={(e)=>data.onClickSearch(e.target)}              \n                >Search</button>\n            </form>\n            </div>\n        </nav>\n    )\n}","const API_URL = 'https://rickandmortyapi.com/api'\nexport const fetchPageItems= (page)=>{     \n    return fetch(`${API_URL}/character?page=${page}`)\n}\n\nexport const searchItems= (name)=>{     \n    return fetch(`${API_URL}/character/?name=${name}`)\n}\n\nexport const addFavorite = (obj)=>{\n    sessionStorage.setItem(\"favorites\",JSON.stringify(obj))\n}\n\nexport const returnFavorite = ()=>{\n    let favorites = sessionStorage.getItem(\"favorites\")\n    if (favorites === null) return []\n    return JSON.parse(favorites)  \n}","import React, {Component} from 'react'\nimport {addFavorite,returnFavorite} from './Service/Service'\n\nexport default class Items extends Component{\n    constructor(props){\n        super(props)\n        this.state={            \n            items:props.items,            \n        }\n    }\n    componentDidMount(){\n        \n    }\n\n    onClickIcon(e){        \n        let obj = e.target.id\n        let temp = returnFavorite()\n        let favorites = returnFavorite()\n        \n        if(temp.length<5 ){\n            \n            temp.push(JSON.parse(obj))\n            \n        }\n        addFavorite(temp)\n        \n        \n    }\n    fillCardItem(e){        \n        return this.props.items.map(\n            cn=>{\n                return(\n                    <div className=\"col-12 col-sm-6 col-md-3 col-lg-4\" style={{padding:10}}>\n                        <div className=\"card\" style={{maxWidth:540, padding:5}}>\n                        <div className=\"row no-gutters\">\n                            <div className=\"col-md-5\">\n                            <img src={cn.image} className=\"card-img\" alt=\"...\" style={{width:'100%'}} />\n                            </div>\n                            <div className=\"col-md-7\">\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title text-truncate\">{cn.name}</h5>\n                                <p className=\"card-text\">\n                                    Specie: <b>{cn.species}</b><br/>\n                                    Episodes: <b>{cn.episode.length}</b><br/>\n                                    status: <span style={{color:cn.status==='Alive'?'green':'red'}}><b>{cn.status}</b></span>\n                                </p>\n                                <p className=\"card-text\">\n                                    <i class=\"far fa-star\"\n                                    id={JSON.stringify(cn)}                                    \n                                    onClick={this.onClickIcon.bind(this)}\n                                    ></i>\n                                    \n                                </p>\n                                <p className=\"card-text\">\n                                <small className=\"text-muted\">{cn.gender}</small>\n                                </p>\n                            </div>\n                            </div>\n                        </div>\n                        </div>\n                    </div>                    \n                );\n            }\n        )\n    }\n\n    render(){        \n        return(            \n            <div className=\"row\">\n                {this.fillCardItem()}                \n            </div>\n        );\n    }\n}","import React, {Component} from 'react'\nimport {TopBar} from './TopBar'\nimport {fetchPageItems, searchItems} from './Service/Service'\nimport Items from './Items';\nimport {addFavorite,returnFavorite} from './Service/Service'\n\nexport default class Index extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            page:1,\n            pages:0,\n            next:2,\n            prev:null,\n            results:[],           \n            name:'',\n            favorites:''\n        }\n        this.returnItemPerPage = this.returnItemPerPage.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.onClickSearch = this.onClickSearch.bind(this)\n    }\n    componentDidMount(){\n        this.returnItemPerPage(this.state.next)\n        document.getElementById(\"btn-search\").addEventListener(\"click\", function(event){\n            event.preventDefault()\n        });  \n        let favorites = returnFavorite()\n        //console.log(favorites)\n        if(favorites.length>0){\n            let htmlBodyFavorites = \n            <div className=\"row\">\n                <div className=\"col\">\n                <ul className=\"list-group\">\n                    {\n                    favorites.map(\n                        cn=>{\n                            return(\n                            <li className=\"list-group-item\">{cn.name}</li>\n                            )\n                        }\n                    )\n                    }                \n                </ul>\n                </div>\n            </div>;\n            this.setState({\n                favorites:htmlBodyFavorites\n            })\n        }\n    }\n\n    onSearch(name){\n        searchItems(name)\n        .then(response => response.json())\n        .then(data => {\n            //console.log(data)\n            if(data.info!==undefined){\n                let {pages} = data.info                   \n                this.setState({\n                    results:data.results,        \n                    pages        \n                })\n            }else{\n                this.setState({\n                    results:[]\n                })\n            } \n            \n        })\n    }\n\n    returnItemPerPage(page){\n        fetchPageItems(page)\n        .then(response => response.json())\n        .then(data => {\n            //console.log(data)                    \n            this.setState({\n                results:data.results,        \n                pages:23        \n            })\n        })\n                \n    }\n    onClickNext=(e)=>{\n        let {page} = this.state\n        const { next, prev } = this.state;\n        this.setState({\n            page:page+1,\n            next:next+1,\n            prev:prev+1\n        })\n        if(next>=23){\n            this.setState({next:23})            \n        }   \n        this.returnItemPerPage(next+1)\n    }\n    onClickPrev = (e)=>{\n        let {page} = this.state\n        const { next, prev } = this.state;        \n        this.setState({\n            page:page-1,\n            next:next-1,\n            prev:prev-1\n        })\n        if(prev<=0){\n            this.setState({prev:null})            \n        }        \n        this.returnItemPerPage(this.state.prev)\n    }\n    \n    onClickFirst(e){\n        this.returnItemPerPage(1)\n        this.setState({            \n            next:2,\n            prev:null\n        })\n    }\n\n    onClickLast(e){\n        this.returnItemPerPage(this.state.pages)\n        let{next,prev}=this.state\n        this.setState({            \n            next:this.state.pages+1,\n            prev:this.state.pages-1\n        })\n    }\n\n    onChange(name){\n        //alert(name)\n        this.setState({\n            name:name\n        })\n    }\n    \n    onClickSearch(e){\n        alert(e.id)             \n        const form = e;\n        if (form.checkValidity() === false) {            \n            this.setState({\n                validated: true,\n                isLoading:false\n            });\n            form.classList.add('was-validated');            \n        } else {\n            this.onSearch(this.state.name)\n        }\n    }\n\n    render(){\n        const {next,prev,results,name, pages} = this.state\n        return(\n            <>\n                <TopBar onChange={this.onChange} name={name} onClickSearch={this.onClickSearch}/>\n                <hr style={{borderBottom:1,marginTop:5}}/>                \n                {(this.state.results.length>0)&&\n                <nav aria-label=\"...\">\n                    <ul className=\"pagination justify-content-center\">\n                        <li className={prev === null || prev === 0 ? \"page-item disabled\" : \"page-item\"}>\n                            <a className=\"page-link\" onClick={this.onClickFirst.bind(this)} href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">First</a>\n                        </li>\n                        <li className={prev === null || prev === 0 ? \"page-item disabled\" : \"page-item\"}>\n                            <a className=\"page-link\" onClick={this.onClickPrev.bind(this)} href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Previous</a>\n                        </li>\n                        <li className={prev === null || prev === 0 ? \"page-item disabled\" : \"page-item\"}>\n                            <a className=\"page-link\" onClick={this.onClickPrev.bind(this)} href=\"#\">{prev === null ? 0 : prev}</a></li>\n                        <li className=\"page-item active\" aria-current=\"page\">\n                            <a className=\"page-link\"  href=\"#\">{next - 1} <span className=\"sr-only\">{next - 1}</span></a>\n                        </li>\n                        <li className={next === null || next >= pages ? \"page-item disabled\" : \"page-item\"} >\n                            <a className=\"page-link\" href=\"#\" name={next} onClick={this.onClickNext.bind(this)}>{next}</a>\n                        </li>\n                        <li className={next === null || next >= pages ? \"page-item disabled\" : \"page-item\"}>\n                            <a className=\"page-link\" onClick={this.onClickNext.bind(this)} href=\"#\">Next</a>\n                        </li>\n                        <li className={next === null || next >= pages ? \"page-item disabled\" : \"page-item\"}>\n                            <a className=\"page-link\" onClick={this.onClickLast.bind(this)} href=\"#\">Last</a>\n                        </li>\n                    </ul>\n                </nav>}\n                <hr style={{borderBottom:1,marginTop:1}}/>\n                    <Items items={results} />  \n                    <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#staticBackdrop\">\n                    Launch static backdrop modal\n                    </button>\n                    <div className=\"modal fade\" id=\"staticBackdrop\" data-backdrop=\"static\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"staticBackdropLabel\">Favorite characters</h5>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            {this.state.favorites}\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                            \n                        </div>\n                        </div>\n                    </div>\n                    </div>             \n            </>\n        );\n    }\n}","import React from 'react'\nimport './App.css'\nimport Index from './Component/Index'\nfunction App() {\n  return (\n    <div className=\"container-md\">\n        <h1 style={{ marginTop: 2 }}>Rick and Morty</h1> \n      <Index />\n    </div>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}